##name: CI-Pipeline
#
#on:
#  push:
#
#jobs:
#  build-and-test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3

#      - name: Set up Java
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '21'

#      - name: Build project with Maven
#        working-directory: GwentApplication
#        run: mvn clean compile

#      - name: Echo token length
#        run: |
#          echo "Token length: ${#CODACY_PROJECT_TOKEN}"
#        env:
#          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

#      - name: Run tests and generate JaCoCo report
#        working-directory: GwentApplication
#        run: mvn verify

#      - name: Download latest Codacy Coverage Reporter
#        run: |
#          curl -L -o codacy-coverage-reporter \
#            https://github.com/codacy/codacy-coverage-reporter/releases/latest/download/codacy-coverage-reporter-linux
#          chmod +x codacy-coverage-reporter

#      - name: Upload coverage report to Codacy
#        env:
#          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
#        run: |
#         ./codacy-coverage-reporter report -l Java -r GwentApplication/target/site/jacoco/jacoco.xml

name: CI-Pipeline

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build project with Maven
        working-directory: GwentApplication
        run: mvn clean compile

      - name: Upload compiled target directory
        uses: actions/upload-artifact@v4
        with:
          name: compiled-code
          path: GwentApplication/target

 # start-db:
 #   runs-on: ubuntu-latest
 #   needs: build
 #   services:
 #     docker:
 #       image: docker:24.0.2
 #       options: --privileged
 #   steps:
 #     - name: Checkout code
 #       uses: actions/checkout@v3

#      - name: Start MariaDB via Docker Compose
 #       working-directory: GwentApplication
  #      run: |
   #       docker compose up -d mariadb
    #      echo "Waiting for MariaDB to initialize..."
     #     sleep 20  # optional, replace with proper healthcheck if needed

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: GwentDB
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Restore compiled target
        uses: actions/download-artifact@v4
        with:
          name: compiled-code
          path: GwentApplication/target



      - name:
          Wait for DB to be ready
        run: |
          echo "Waiting for DB to be ready..."
          sleep 20  # optional, if healthcheck is reliable, can be skipped

      - name: Run tests and generate JaCoCo report
        working-directory: GwentApplication
        run: mvn verify -Dspring.profiles.active=ci

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: GwentApplication/target/site/jacoco/jacoco.xml

  codacy-coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JaCoCo report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: GwentApplication/target/site/jacoco/

      - name: Download latest Codacy Coverage Reporter
        run: |
          curl -L -o codacy-coverage-reporter \
            https://github.com/codacy/codacy-coverage-reporter/releases/latest/download/codacy-coverage-reporter-linux
          chmod +x codacy-coverage-reporter

      - name: Upload coverage report to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          ./codacy-coverage-reporter report -l Java -r GwentApplication/target/site/jacoco/jacoco.xml
